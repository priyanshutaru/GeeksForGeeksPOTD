# Smallest factorial number

Given a number n. The task is to find the smallest number whose factorial contains at least n trailing zeroes.

Example 1:

Input:
n = 1
Output: 5
Explanation : 5! = 120 which has at
least 1 trailing 0.
Example 2:

Input:
n = 6
Output: 25
Explanation : 25! has at least
6 trailing 0.

User Task:
Complete the function findNum() which takes an integer N as input parameters, and returns the answer.

Expected Time Complexity: O(log2 N * log5 N).
Expected Auxiliary Space: O(1).

Constraints:
1 <= n <= 104

# Soluction

class Solution
{
    public:
        int findNum(int n)
        {
        //complete the function here
          int l = 1, r = 5*n;
           while(l<r){
               int mid = (l+r)/2;
               int cnt = 0;
               for(int i=5;i<=mid;i *= 5){
                   cnt += (mid/i);
               }
               if(cnt<n) l = mid+1;
               else r = mid;
           }
           return l;
        }
};
